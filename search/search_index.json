{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"aiovkcom aiovkcom is a python vk.com API wrapper that supports: authorization with Authorization Code , REST API methods. Usage To use vk.com API you need a registered app, vk.com account and access_token . For more details, see aiovkcom Documentation . from aiovkcom import TokenSession , API session = TokenSession ( access_token , v = '5.101' ) api = API ( session ) events = await api . wall . get () friends = await api . friends . get () Installation $ pip install aiovkcom or $ python setup.py install Supported Python Versions Python 3.7, 3.8, 3.9 are supported. Test Run all tests. $ python setup.py test Run tests with PyTest. $ python -m pytest [ -k TEST_NAME ] License aiovkcom is released under the BSD 2-Clause License.","title":"Home"},{"location":"#aiovkcom","text":"aiovkcom is a python vk.com API wrapper that supports: authorization with Authorization Code , REST API methods.","title":"aiovkcom"},{"location":"#usage","text":"To use vk.com API you need a registered app, vk.com account and access_token . For more details, see aiovkcom Documentation . from aiovkcom import TokenSession , API session = TokenSession ( access_token , v = '5.101' ) api = API ( session ) events = await api . wall . get () friends = await api . friends . get ()","title":"Usage"},{"location":"#installation","text":"$ pip install aiovkcom or $ python setup.py install","title":"Installation"},{"location":"#supported-python-versions","text":"Python 3.7, 3.8, 3.9 are supported.","title":"Supported Python Versions"},{"location":"#test","text":"Run all tests. $ python setup.py test Run tests with PyTest. $ python -m pytest [ -k TEST_NAME ]","title":"Test"},{"location":"#license","text":"aiovkcom is released under the BSD 2-Clause License.","title":"License"},{"location":"authorization/","text":"Authorization To authorize with vk.com OAuth 2.0 you need app_id and app_secret (Code Grant). The preferred way to authorize is an async with statement. After authorization the session will have the following attributes: access_token expires_in user_id Authorization Code Grant from aiovkcom import CodeSession , API app_id = 123456 app_secret = 'abc' async with CodeSession ( app_id , app_secret , code , redirect_uri ) as session : api = API ( session ) ... About OAuth 2.0 Authorization Code Grant: https://oauth.net/2/grant-types/authorization-code/ . For more details, see https://vk.com/dev/authcode_flow_user .","title":"Authorization"},{"location":"authorization/#authorization","text":"To authorize with vk.com OAuth 2.0 you need app_id and app_secret (Code Grant). The preferred way to authorize is an async with statement. After authorization the session will have the following attributes: access_token expires_in user_id","title":"Authorization"},{"location":"authorization/#authorization-code-grant","text":"from aiovkcom import CodeSession , API app_id = 123456 app_secret = 'abc' async with CodeSession ( app_id , app_secret , code , redirect_uri ) as session : api = API ( session ) ... About OAuth 2.0 Authorization Code Grant: https://oauth.net/2/grant-types/authorization-code/ . For more details, see https://vk.com/dev/authcode_flow_user .","title":"Authorization Code Grant"},{"location":"getting_started/","text":"Getting Started Installation $ pip install aiovkcom or $ git clone https://github.com/konstantintogoi/aiovkcom.git $ cd aiovkcom $ python setup.py install Account Sign up in vk.com . Application After signing up visit vk.com API documentation page and create a new application: https://vk.com/editapp?act=create. Save client_id (aka app_id ) and client_secret (aka app_secret ) for user authorization. app_id = 'your client id' app_secret = 'your secret key'","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"","title":"Getting Started"},{"location":"getting_started/#installation","text":"$ pip install aiovkcom or $ git clone https://github.com/konstantintogoi/aiovkcom.git $ cd aiovkcom $ python setup.py install","title":"Installation"},{"location":"getting_started/#account","text":"Sign up in vk.com .","title":"Account"},{"location":"getting_started/#application","text":"After signing up visit vk.com API documentation page and create a new application: https://vk.com/editapp?act=create. Save client_id (aka app_id ) and client_secret (aka app_secret ) for user authorization. app_id = 'your client id' app_secret = 'your secret key'","title":"Application"},{"location":"rest_api/","text":"REST API List of all methods is available here: https://vk.com/dev/methods . Executing requests from aiovkcom import API api = API ( session ) events = await api . newsfeed . get () friends = await api . friends . get () Under the hood each API request is enriched with parameters https://vk.com/dev/api_requests : access_token v to authorize request.","title":"REST API"},{"location":"rest_api/#rest-api","text":"List of all methods is available here: https://vk.com/dev/methods .","title":"REST API"},{"location":"rest_api/#executing-requests","text":"from aiovkcom import API api = API ( session ) events = await api . newsfeed . get () friends = await api . friends . get () Under the hood each API request is enriched with parameters https://vk.com/dev/api_requests : access_token v to authorize request.","title":"Executing requests"},{"location":"session/","text":"Session Request The session makes GET requests when you call methods of an API instance. For example, the following code block from aiovkcom import TokenSession , API session = TokenSession ( 'abcde' , v = '5.101' ) api = API ( session ) news = await api . newsfeed . get () is equivalent to GET request: https://api.vk.com/method/newsfeed.get?access_token = abcde & v = 5 .101 Response A session after executing request returns response's body. Example: { \"response\" :[{ \"id\" : 210700286 , \"first_name\" : \"Lindsey\" , \"last_name\" : \"Stirling\" }]} Error In case of an error, by default, an exception is raised. You can pass raise_for_status=False parameter to TokenSession for returning original response. Example: { \"error\" : { \"error_code\" : 1 , \"error_msg\" : \"Unknown error occurred\" , \"request_params\" : { ... }}}","title":"Session"},{"location":"session/#session","text":"","title":"Session"},{"location":"session/#request","text":"The session makes GET requests when you call methods of an API instance. For example, the following code block from aiovkcom import TokenSession , API session = TokenSession ( 'abcde' , v = '5.101' ) api = API ( session ) news = await api . newsfeed . get () is equivalent to GET request: https://api.vk.com/method/newsfeed.get?access_token = abcde & v = 5 .101","title":"Request"},{"location":"session/#response","text":"A session after executing request returns response's body. Example: { \"response\" :[{ \"id\" : 210700286 , \"first_name\" : \"Lindsey\" , \"last_name\" : \"Stirling\" }]}","title":"Response"},{"location":"session/#error","text":"In case of an error, by default, an exception is raised. You can pass raise_for_status=False parameter to TokenSession for returning original response. Example: { \"error\" : { \"error_code\" : 1 , \"error_msg\" : \"Unknown error occurred\" , \"request_params\" : { ... }}}","title":"Error"}]}